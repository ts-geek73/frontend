{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///home/techstaunch/Next.js%26React/movie-explo/frontend/pages/_document.tsx"],"sourcesContent":["import { Html, Head, Main, NextScript } from 'next/document'\n \nexport default function Document() {\n  return (\n    <Html>\n      <Head />\n      <body>\n        <Main />\n        <NextScript />\n      </body>\n    </Html>\n  )\n}"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBACE,qKAAC,yHAAA,CAAA,OAAI;;0BACH,qKAAC,yHAAA,CAAA,OAAI;;;;;0BACL,qKAAC;;kCACC,qKAAC,yHAAA,CAAA,OAAI;;;;;kCACL,qKAAC,yHAAA,CAAA,aAAU;;;;;;;;;;;;;;;;;AAInB"}},
    {"offset": {"line": 95, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 101, "column": 0}, "map": {"version":3,"sources":["file:///home/techstaunch/Next.js%26React/movie-explo/frontend/pages/_app.tsx"],"sourcesContent":["import { AppProps } from 'next/app';\nimport './../app/globals.css'; \n\nconst MyApp = ({ Component, pageProps }: AppProps) => {\n  \n  return (\n    <>\n      <Component {...pageProps} />\n    </>\n  );\n}\n\nexport default MyApp;\n"],"names":[],"mappings":";;;;;;AAGA,MAAM,QAAQ,CAAC,EAAE,SAAS,EAAE,SAAS,EAAY;IAE/C,qBACE;kBACE,cAAA,qKAAC;YAAW,GAAG,SAAS;;;;;;;AAG9B;uCAEe"}},
    {"offset": {"line": 119, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file:///home/techstaunch/Next.js%26React/movie-explo/frontend/app/components/User/createmovie.tsx"],"sourcesContent":["'use client'\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { toast, ToastContainer } from 'react-toastify';\n\ninterface movieInter {\n    title: string;\n    description: string;\n    rating: number;\n    release: number;\n    director: string;\n    categories: string[];\n    image: string;\n}\n\nconst Admin = () => {\n    const [movieData, setMovieData] = useState<movieInter>({\n        title: \"\",\n        description: \"\",\n        rating: 0,\n        release: 1950,\n        director: \"\",\n        categories: [],\n        image: \"\", \n    });\n    const [categories, setCategories] = useState<Array<{ category_id: number; title: string }>>([]);\n    const [error, setError] = useState<string>(\"\");\n\n    useEffect(() => {\n        const fetchCategories = async () => {\n            try {\n                const response = await axios.get('http://localhost:8000/category');\n                setCategories(response.data);\n            } catch (err) {\n                console.error(\"Error fetching categories:\", err);\n            }\n        };\n\n        fetchCategories();\n    }, []);\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n\n\n        if (!movieData.title || !movieData.description || !movieData.rating || !movieData.release || !movieData.director || movieData.categories.length === 0) {\n            setError(\"Please fill out all fields.\");\n            return;\n        }\n        \n        if (movieData.description.length < 10) {\n            setError(\"Description must be at least 10 characters long.\");\n            return;\n        }\n        \n        if (movieData.description.length > 500) {\n            setError(\"Description must be less than 500 characters.\");\n            return;\n        }\n\n    \n        // if (movieData.release < 1900 || movieData.release > new Date().getFullYear()) {\n        //     setError(\"Release year must be valid.\");\n        //     return;\n        // }\n\n        try {\n            // console.log(\"Movie Data:\", movieData);\n            \n            const response = await axios.post('http://localhost:8000/movie', movieData, {\n                headers: {\n                    'Content-Type': 'application/json', \n                },\n            });\n\n            if (response.status === 201) {\n                toast.success(\"Movie created successfully!\");\n                setError(\"\");\n                setMovieData({\n                    title: \"\",\n                    description: \"\",\n                    rating: 0,\n                    release: 1950,\n                    director: \"\",\n                    categories: [],\n                    image: \"\",\n                });\n            }\n        } catch (error) {\n            // console.error(\"Error:\", error);\n            toast.error(\"Error \");\n            console.error(\"Error:\", error);\n            if (axios.isAxiosError(error)) {\n                toast.error(`Error: ${error.response?.data || \"Unknown error\"}`);\n            } else {\n                toast.error(\"Error while creating movie.\");\n            }\n        }\n    };\n\n    const handleCategoryChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        const selectedCategories = Array.from(e.target.selectedOptions, (option) => option.value);\n        setMovieData((prevData) => ({...prevData,categories: selectedCategories}));\n    };\n\n    const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n        const { name, value } = e.target;\n        setMovieData((prevData) => ({\n            ...prevData,\n            [name]: value,\n        }));\n    };\n\n    return (\n        <div className=\"m-auto p-7 text-center\">\n            <h1>Movie Create Page</h1>\n            <form onSubmit={handleSubmit} \n            method=\"post\" \n            className=\"grid gap-3 justify-center py-5\">\n\n                <div className=\"flex border-b-2 items-center justify-evenly p-4 gap-5\">\n                    <label htmlFor=\"title\">Movie Title:</label>\n                    <input\n                        type=\"text\"\n                        name=\"title\"\n                        id=\"title\"\n                        value={movieData.title}\n                        onChange={handleChange}\n                        placeholder=\"Enter Movie Name\"\n                        className=\"border-2 p-1\"\n                    />\n                </div>\n\n                <div className=\"flex border-y-2 items-center justify-between p-4 gap-5\">\n                    <label htmlFor=\"desc\">Movie Description:</label>\n                    <textarea\n                        name=\"description\"\n                        id=\"desc\"\n                        rows={4}\n                        value={movieData.description}  \n                        onChange={handleChange}  \n                        cols={25}\n                        placeholder=\"Describe the Movie\"\n                        className=\"border-2 p-1\"\n                    />\n                </div>\n\n                <div className=\"flex border-b-2 items-center justify-evenly p-4 gap-5\">\n                    <label htmlFor=\"rating\">IMDB Ratings:</label>\n                    <input\n                        type=\"number\"\n                        name=\"rating\"\n                        id=\"rating\"\n                        min={0}\n                        max={10}\n                        value={movieData.rating}\n                        onChange={handleChange}\n                        className=\"border-2 p-1\"\n                    />\n                </div>\n\n                <div className=\"flex border-b-2 items-center justify-evenly p-4 gap-5\">\n                    <label htmlFor=\"release\">Release Year:</label>\n                    <input\n                        type=\"number\"\n                        name=\"release\"\n                        id=\"release\"\n                        className=\"border-2\"\n                        value={movieData.release}\n                        onChange={handleChange}\n                    />\n                </div>\n\n                <div className=\"flex border-b-2 items-center justify-evenly p-4 gap-5\">\n                    <label htmlFor=\"director\">Director Name:</label>\n                    <input\n                        type=\"text\"\n                        name=\"director\"\n                        id=\"director\"\n                        value={movieData.director}\n                        onChange={handleChange}\n                        placeholder=\"Enter Movie Director Name\"\n                    />\n                </div>\n\n                <div className=\"flex border-b-2 items-center justify-evenly p-4 gap-5\">\n                    <label htmlFor=\"categories\">Categories:</label>\n                    <select\n                        multiple\n                        name=\"categories\"\n                        id=\"categories\"\n                        className=\"border-2\"\n                        value={movieData.categories}\n                        onChange={handleCategoryChange}\n                    >\n                        {categories.map((category) => (\n                            <option key={category.category_id} value={category.category_id.toString()}>\n                                {category.title}\n                            </option>\n                        ))}\n                    </select>\n                </div>\n\n                <div className=\"flex border-b-2 items-center justify-evenly p-4 gap-5\">\n                    <label htmlFor=\"image\">Image URL:</label>\n                    <input\n                        type=\"text\"\n                        name=\"image\"\n                        id=\"image\"\n                        value={movieData.image}\n                        onChange={handleChange}\n                        placeholder=\"Enter Movie Image URL\"\n                        className=\"border-2 p-1\"\n                    />\n                </div>\n\n                {error && <div className=\"text-red-500\">{error}</div>}\n\n                <button type=\"submit\"\n                className='bg-red-300 w-28 h-11 rounded-lg m-auto'>Submit</button>\n            </form>\n            <ToastContainer />\n        </div>\n    );\n};\n\nexport default Admin;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 516, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 523, "column": 0}, "map": {"version":3,"sources":["file:///home/techstaunch/Next.js%26React/movie-explo/frontend/app/components/User/updatemovie.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { toast, ToastContainer } from 'react-toastify';\n\ninterface movieInter {\n    title: string;\n    description: string;\n    rating: number;\n    release: number;\n    director: string;\n    categories: string[];\n    image: string;\n}\n\nconst AdminUpdateMovie = () => {\n    const [movies, setMovies] = useState<Array<{ id: string, title: string }>>([]);\n    const [selectedMovieId, setSelectedMovieId] = useState<string | null>(null);\n    const [movieData, setMovieData] = useState<movieInter>({\n        title: \"\",\n        description: \"\",\n        rating: 0,\n        release: 1950,\n        director: \"\",\n        categories: [],\n        image: \"\",\n    });\n    const [categories, setCategories] = useState<Array<{ category_id: number; title: string }>>([]);\n    const [error, setError] = useState<string>(\"\");\n\n    useEffect(() => {\n        const fetchMovies = async () => {\n            try {\n                const response = await axios.get('http://localhost:8000/movie');\n                const extractedMovies = response.data.map((movie: { movie_id: number; title: string; }) => ({\n                    id: movie.movie_id,\n                    title: movie.title,\n                }));\n                setMovies(extractedMovies);\n                console.log(\"extractedMovies Movies: \", extractedMovies);\n                \n            } catch (err) {\n                toast.error(\"Error fetching movies.\");\n            }\n        };\n\n\n        const fetchCategories = async () => {\n        try {\n            const response = await axios.get('http://localhost:8000/category');\n            setCategories(response.data);\n        } catch (err) {\n            console.error(\"Error fetching categories:\", err);\n            toast.error(\"Error fetching categories.\");\n        }\n    };\n    \n    fetchCategories();\n        fetchMovies();\n    }, []);\n\n\n    useEffect(() => {\n\n        if (selectedMovieId) {\n            console.log(\"Selected Movie ID: \", selectedMovieId);\n            const fetchMovieData = async () => {\n                try {\n                    const response = await axios.get(`http://localhost:8000/movie/${selectedMovieId}`);\n                    // console.log(\"Movie Data: \", response.data);\n                    // console.log(\"Movie Data: \", response.data.movie_id);\n                    \n                    setMovieData(response.data);\n                } catch (err) {\n                    \n                    toast.error(\"Error fetching movie data.\");\n                }\n            };\n            fetchMovieData();\n        }\n    }, [selectedMovieId]);\n\n    const handleSubmit = async (e: React.FormEvent) => {\n        e.preventDefault();\n\n        if (!movieData.title || !movieData.description || !movieData.rating || !movieData.release || !movieData.director || movieData.categories.length === 0) {\n            setError(\"Please fill out all fields.\");\n            return;\n        }\n\n        if (movieData.description.length < 10) {\n            setError(\"Description must be at least 10 characters long.\");\n            return;\n        }\n\n        if (movieData.description.length > 500) {\n            setError(\"Description must be less than 500 characters.\");\n            return;\n        }\n\n        if (movieData.rating < 0 || movieData.rating > 10) {\n            setError(\"Rating must be between 0 and 10.\");\n            return;\n        }\n\n        if (movieData.release < 1900 || movieData.release > new Date().getFullYear()) {\n            setError(\"Release year must be valid.\");\n            return;\n        }\n\n        try {\n            const response = await axios.put(`http://localhost:8000/movie/${selectedMovieId}`, movieData, {\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n            });\n\n            if (response.status === 200) {\n                console.log(response.data);\n                toast.success(\"Movie updated successfully!\");\n                setMovieData({\n                    title: \"\",\n                    description: \"\",\n                    rating: 0,\n                    release: 1950,\n                    director: \"\",\n                    categories: [],\n                    image: \"\",\n                });\n            }\n        } catch (error) {\n            console.error(\"Error:\", error);\n            toast.error(\"Error updating movie.\");\n            if (axios.isAxiosError(error)) {\n                toast.error(`Error: ${error.response?.data || \"Unknown error\"}`);\n            } else {\n                toast.error(\"Error while updating movie.\");\n            }\n        }\n    };\n\n    const handleCategoryChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        const selectedCategories = Array.from(e.target.selectedOptions, (option) => option.value);\n        setMovieData((prevData) => ({ ...prevData, categories: selectedCategories }));\n    };\n\n    const handleChange = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\n        const { name, value } = e.target;\n        setMovieData((prevData) => ({\n            ...prevData,\n            [name]: value,\n        }));\n    };\n\n\n    const setMoviFun = (e: React.ChangeEvent<HTMLSelectElement>) => {\n        const selectedOption = e.target.options[e.target.selectedIndex];\n        const movieId = selectedOption.value;\n        // alert(movieId);\n\n        setSelectedMovieId(movieId); \n    };\n\n    return (\n        <div className=\"m-auto p-7  text-center\">\n            <h1>Update Movie</h1>\n\n\n            <div className=\"flex border-b-2 items-center justify-evenly p-4 gap-5\">\n                <label htmlFor=\"movie\">Select Movie:</label>\n                <select\n                    id=\"movie\"\n                    value={selectedMovieId || \"\"}\n                    onChange={setMoviFun}\n                    className=\"border-2 p-1\"\n                >\n                    <option value=\"\">Select a movie</option>\n                    {movies.map((movie) => (\n                        <option key={movie.id} value={movie.id}> \n                            {movie.title}\n                        </option>\n                    ))}\n                </select>\n            </div>\n\n\n            {selectedMovieId && (\n                <form onSubmit={handleSubmit} className=\"grid gap-3 justify-center py-5\">\n                    <div className=\"flex border-b-2 items-center justify-evenly p-4 gap-5\">\n                        <label htmlFor=\"title\">Movie Title:</label>\n                        <input\n                            type=\"text\"\n                            name=\"title\"\n                            id=\"title\"\n                            value={movieData.title}\n                            onChange={handleChange}\n                            placeholder=\"Enter Movie Name\"\n                            className=\"border-2 p-1\"\n                        />\n                    </div>\n\n                    <div className=\"flex border-y-2 items-center justify-between p-4 gap-5\">\n                        <label htmlFor=\"description\">Movie Description:</label>\n                        <textarea\n                            name=\"description\"\n                            id=\"description\"\n                            rows={4}\n                            value={movieData.description}\n                            onChange={handleChange}\n                            cols={25}\n                            placeholder=\"Describe the Movie\"\n                            className=\"border-2 p-1\"\n                        />\n                    </div>\n\n                    <div className=\"flex border-b-2 items-center justify-evenly p-4 gap-5\">\n                        <label htmlFor=\"rating\">IMDB Ratings:</label>\n                        <input\n                            type=\"number\"\n                            name=\"rating\"\n                            id=\"rating\"\n                            min={0}\n                            max={10}\n                            value={movieData.rating}\n                            onChange={handleChange}\n                            className=\"border-2 p-1\"\n                        />\n                    </div>\n\n                    <div className=\"flex border-b-2 items-center justify-evenly p-4 gap-5\">\n                        <label htmlFor=\"release\">Release Year:</label>\n                        <input\n                            type=\"number\"\n                            name=\"release\"\n                            id=\"release\"\n                            className=\"border-2\"\n                            value={movieData.release}\n                            onChange={handleChange}\n                        />\n                    </div>\n\n                    <div className=\"flex border-b-2 items-center justify-evenly p-4 gap-5\">\n                        <label htmlFor=\"director\">Director Name:</label>\n                        <input\n                            type=\"text\"\n                            name=\"director\"\n                            id=\"director\"\n                            value={movieData.director}\n                            onChange={handleChange}\n                            placeholder=\"Enter Movie Director Name\"\n                        />\n                    </div>\n\n                    <div className=\"flex border-b-2 items-center justify-evenly p-4 gap-5\">\n                        <label htmlFor=\"categories\">Categories:</label>\n                        <select\n                            multiple\n                            name=\"categories\"\n                            id=\"categories\"\n                            className=\"border-2\"\n                            value={movieData.categories}\n                            onChange={handleCategoryChange}\n                        >\n                            {categories.map((category) => (\n                                <option key={category.category_id} value={category.category_id.toString()}>\n                                    {category.title}\n                                </option>\n                            ))}\n                        </select>\n                    </div>\n\n                    <div className=\"flex border-b-2 items-center justify-evenly p-4 gap-5\">\n                        <label htmlFor=\"image\">Image URL:</label>\n                        <input\n                            type=\"text\"\n                            name=\"image\"\n                            id=\"image\"\n                            value={movieData.image}\n                            onChange={handleChange}\n                            placeholder=\"Enter Movie Image URL\"\n                            className=\"border-2 p-1\"\n                        />\n                    </div>\n\n                    {error && <div className=\"text-red-500\">{error}</div>}\n\n                    <button type=\"submit\" className='bg-red-300 w-28 h-11 rounded-lg m-auto'>Update</button>\n                </form>\n            )}\n\n            <ToastContainer />\n        </div>\n    );\n};\n\nexport default AdminUpdateMovie;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 980, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 987, "column": 0}, "map": {"version":3,"sources":["file:///home/techstaunch/Next.js%26React/movie-explo/frontend/app/components/User/createCategory.tsx"],"sourcesContent":["'use client'\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\n\ntype category = {\n  title: string;\n  icon: string;\n};\n\nconst CreateCategory: React.FC = () => {\n  const [category, setCategory] = useState<category>({\n    title: \"\",\n    icon: \"\",\n  }); \n  const [error, setError] = useState<string | null>(null);\n  const [success, setSuccess] = useState<string | null>(null);\n\n  const handleSubmit = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n\n    if (!category.title || !category.icon) {\n      setError(\"Please fill in both fields\");\n      return;\n    }\n\n    try {\n\n      const response = await axios.post(\"http://localhost:8000/category\", category);\n\n\n      if (response.status === 200) {\n        setSuccess(\"Category created successfully!\");\n        setError(null); \n        setCategory({ title: \"\", icon: \"\" }); \n      }\n    } catch (error: any) {\n        setError(error.response.data);\n\n    }\n  };\n\n  return (\n    <div className=\"container mx-auto p-4\">\n      <h1 className=\"text-2xl font-semibold text-center\">Create Category</h1>\n\n      {/* Display success or error message */}\n      {error && <p className=\"text-red-500\">{error}</p>}\n      {success && <p className=\"text-green-500\">{success}</p>}\n\n      <form onSubmit={handleSubmit} className=\"mt-4\">\n        <div className=\"mb-4\">\n          <label htmlFor=\"title\" className=\"block text-sm font-medium text-gray-700\">\n            Category Title\n          </label>\n          <input\n            type=\"text\"\n            id=\"title\"\n            name=\"title\"\n            value={category.title}\n            onChange={(e) => setCategory({...category , title: e.target.value})}\n            className=\"w-full p-3 border border-gray-300 rounded-lg mt-1\"\n            placeholder=\"Enter category title\"\n            required\n          />\n        </div>\n\n        <div className=\"mb-4\">\n          <label htmlFor=\"icon\" className=\"block text-sm font-medium text-gray-700\">\n            Category Icon\n          </label>\n          <input\n            type=\"text\"\n            id=\"icon\"\n            name=\"icon\"\n            value={category.icon}\n            onChange={(e) => setCategory({ ...category, icon: e.target.value })} \n            className=\"w-full p-3 border border-gray-300 rounded-lg mt-1\"\n            placeholder=\"Enter category icon \"\n            required\n          />\n        </div>\n\n        <button\n          type=\"submit\"\n          className=\"w-full mt-4 py-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600\"\n        >\n          Create Category\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateCategory;\n\n"],"names":[],"mappings":";;;;AACA;AACA;;;;;AAFA;;;;AASA,MAAM,iBAA2B;IAC/B,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAY;QACjD,OAAO;QACP,MAAM;IACR;IACA,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAiB;IAEtD,MAAM,eAAe,OAAO;QAC1B,EAAE,cAAc;QAGhB,IAAI,CAAC,SAAS,KAAK,IAAI,CAAC,SAAS,IAAI,EAAE;YACrC,SAAS;YACT;QACF;QAEA,IAAI;YAEF,MAAM,WAAW,MAAM,0GAAA,CAAA,UAAK,CAAC,IAAI,CAAC,kCAAkC;YAGpE,IAAI,SAAS,MAAM,KAAK,KAAK;gBAC3B,WAAW;gBACX,SAAS;gBACT,YAAY;oBAAE,OAAO;oBAAI,MAAM;gBAAG;YACpC;QACF,EAAE,OAAO,OAAY;YACjB,SAAS,MAAM,QAAQ,CAAC,IAAI;QAEhC;IACF;IAEA,qBACE,qKAAC;QAAI,WAAU;;0BACb,qKAAC;gBAAG,WAAU;0BAAqC;;;;;;YAGlD,uBAAS,qKAAC;gBAAE,WAAU;0BAAgB;;;;;;YACtC,yBAAW,qKAAC;gBAAE,WAAU;0BAAkB;;;;;;0BAE3C,qKAAC;gBAAK,UAAU;gBAAc,WAAU;;kCACtC,qKAAC;wBAAI,WAAU;;0CACb,qKAAC;gCAAM,SAAQ;gCAAQ,WAAU;0CAA0C;;;;;;0CAG3E,qKAAC;gCACC,MAAK;gCACL,IAAG;gCACH,MAAK;gCACL,OAAO,SAAS,KAAK;gCACrB,UAAU,CAAC,IAAM,YAAY;wCAAC,GAAG,QAAQ;wCAAG,OAAO,EAAE,MAAM,CAAC,KAAK;oCAAA;gCACjE,WAAU;gCACV,aAAY;gCACZ,QAAQ;;;;;;;;;;;;kCAIZ,qKAAC;wBAAI,WAAU;;0CACb,qKAAC;gCAAM,SAAQ;gCAAO,WAAU;0CAA0C;;;;;;0CAG1E,qKAAC;gCACC,MAAK;gCACL,IAAG;gCACH,MAAK;gCACL,OAAO,SAAS,IAAI;gCACpB,UAAU,CAAC,IAAM,YAAY;wCAAE,GAAG,QAAQ;wCAAE,MAAM,EAAE,MAAM,CAAC,KAAK;oCAAC;gCACjE,WAAU;gCACV,aAAY;gCACZ,QAAQ;;;;;;;;;;;;kCAIZ,qKAAC;wBACC,MAAK;wBACL,WAAU;kCACX;;;;;;;;;;;;;;;;;;AAMT;uCAEe"}},
    {"offset": {"line": 1152, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1159, "column": 0}, "map": {"version":3,"sources":["file:///home/techstaunch/Next.js%26React/movie-explo/frontend/pages/admin/index.tsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport CreateMovie from \"../../app/components/User/createmovie\";\nimport UpgradeMovie from \"../../app/components/User/updatemovie\";\nimport CategoryMovie from \"../../app/components/User/createCategory\";\n\nconst AdminPage = () => {\n  const [activeComponent, setActiveComponent] = useState<string>(\"create\");\n\n  const handleSidebarClick = (eve: React.MouseEvent<HTMLButtonElement>) => {\n    // console.log(eve.currentTarget.id);\n    setActiveComponent(eve.currentTarget.id);\n  };\n\n  return (\n    <div className=\"flex h-screen\">\n\n      <div className=\"bg-blue-400 w-1/6 p-4 text-white text-center text-2xl flex flex-col gap-y-10 justify-center\">\n        <button\n          id=\"create\"\n          onClick={handleSidebarClick}\n          className=\"cursor-pointer mb-4\"\n        >\n          Create Movie\n        </button>\n        <button\n          id=\"upgrade\"\n          onClick={handleSidebarClick}\n          className=\"cursor-pointer mb-4\"\n        >\n          Upgrade Movie\n        </button>\n        <button\n          id=\"category\"\n          onClick={handleSidebarClick}\n          className=\"cursor-pointer mb-4\"\n        >\n          Category Movie\n        </button>\n      </div>\n\n\n      <div className=\"flex-1 p-8\">\n        {activeComponent === \"create\" && <CreateMovie />}\n        {activeComponent === \"upgrade\" && <UpgradeMovie />}\n        {activeComponent === \"category\" && <CategoryMovie />}\n      </div>\n    </div>\n  );\n};\n\nexport default AdminPage;\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;;;;;;;;;;;;AAEA,MAAM,YAAY;IAChB,MAAM,CAAC,iBAAiB,mBAAmB,GAAG,CAAA,GAAA,mGAAA,CAAA,WAAQ,AAAD,EAAU;IAE/D,MAAM,qBAAqB,CAAC;QAC1B,qCAAqC;QACrC,mBAAmB,IAAI,aAAa,CAAC,EAAE;IACzC;IAEA,qBACE,qKAAC;QAAI,WAAU;;0BAEb,qKAAC;gBAAI,WAAU;;kCACb,qKAAC;wBACC,IAAG;wBACH,SAAS;wBACT,WAAU;kCACX;;;;;;kCAGD,qKAAC;wBACC,IAAG;wBACH,SAAS;wBACT,WAAU;kCACX;;;;;;kCAGD,qKAAC;wBACC,IAAG;wBACH,SAAS;wBACT,WAAU;kCACX;;;;;;;;;;;;0BAMH,qKAAC;gBAAI,WAAU;;oBACZ,oBAAoB,0BAAY,qKAAC,kIAAA,CAAA,UAAW;;;;;oBAC5C,oBAAoB,2BAAa,qKAAC,kIAAA,CAAA,UAAY;;;;;oBAC9C,oBAAoB,4BAAc,qKAAC,qIAAA,CAAA,UAAa;;;;;;;;;;;;;;;;;AAIzD;uCAEe"}},
    {"offset": {"line": 1258, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}